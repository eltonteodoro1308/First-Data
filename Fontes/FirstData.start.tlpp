#include 'totvs.ch'
#include 'tlpp-core.th'

namespace FirstData

user function start()

	//BrowserLayout()

	//Cria o MsApp
	MsApp():New('SIGAESP')
	oApp:CreateEnv()

	//Seta o tema do Protheus (SUNSET = Vermelho; OCEAN = Azul)
	//PtSetTheme("OCEAN")

	//Define o programa que será executado após o login
	oApp:cStartProg    := 'FirstData.u_BrowserLayout'

	//Seta Atributos
	//__lInternet := .T.

	//Inicia a Janela
	oApp:Activate()

return


user function BrowserLayout()

	if CheckEnvironment()

		
	end if

return

static function CheckEnvironment()

	local cDirSeparator    :=  if(IsSrvUnix(),'/','\')
	local cMainPath        := cDirSeparator + 'First_Data'
	local cExtension       := GetSrvProfString(  'localdbextension', '.dtc' )

	local cLayoutsTable    := cMainPath + cDirSeparator + 'layouts'     + cEmpAnt + cExtension
	local cProcessingTable := cMainPath + cDirSeparator + 'processing'  + cEmpAnt + cExtension

	local nLenBranch                := len( cFilAnt )

	local nLenLayoutCode            := 10
	local nLenLayoutVersion         := 03
	local nLenLayoutDescription     := 50

	local nLenProcessingCode        := 10
	local nLenProcessingVersion     := 03
	local nLenProcessingDescription := 50

	//** Valida existencia da pasta principal
	if ! existDir( cMainPath )

		if makeDir( cMainPath ) != 0

			ApMsgStop('Não foi possível criar o diretório de base.')

			return .F.

		end if

	end if

	//** Valida a existencia da tabela de layouts
	if ! file( cLayoutsTable )

		DBCreate( cLayoutsTable, {;
			{ 'BRANCH'    , 'C', nLenBranch            , 00 },;
			{ 'CODE'      , 'C', nLenLayoutCode        , 00 },;
			{ 'VERSION'   , 'C', nLenLayoutVersion     , 00 },;
			{ 'DESCRIPIT' , 'C', nLenLayoutDescription , 00 },;
			{ 'JSON'      , 'M', 00                    , 00 } ;
			}, 'CTREECDX' )

	end if

	//** Valida a existencia da tabela de processamentos (processing)
	if ! file( cProcessingTable )

		DBCreate( cProcessingTable, {;
			{ 'BRANCH'    , 'C', nLenBranch                , 00 },;
			{ 'CODE'      , 'C', nLenProcessingCode        , 00 },;
			{ 'VERSION'   , 'C', nLenProcessingVersion     , 00 },;
			{ 'DESCRIPIT' , 'C', nLenProcessingDescription , 00 },;
			{ 'LAY_CODE'  , 'C', nLenLayoutCode            , 00 },;
			{ 'LAY_VERS'  , 'C', nLenLayoutVersion         , 00 } ;
			}, 'CTREECDX' )

	end if

return .T.
